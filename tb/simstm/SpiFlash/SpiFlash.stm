-- ******************************************************************************
-- 
--                   /------o
--             eccelerators
--          o------/
-- 
--  This file is an Eccelerators GmbH sample project.
-- 
--  MIT License:
--  Copyright (c) 2023 Eccelerators GmbH
-- 
--  Permission is hereby granted, free of charge, to any person obtaining a copy
--  of this software and associated documentation files (the "Software"), to deal
--  in the Software without restriction, including without limitation the rights
--  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--  copies of the Software, and to permit persons to whom the Software is
--  furnished to do so, subject to the following conditions:
-- 
--  The above copyright notice and this permission notice shall be included in all
--  copies or substantial portions of the Software.
-- 
--  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
--  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
--  SOFTWARE.
-- ******************************************************************************

    -- global
	const SPI_FLASH_CMD_PAGE_WR 0x02 -- for all SpiFlash modules
	const SPI_FLASH_CMD_PAGE_RD 0x03 -- for all SpiFlash modules
	const SPI_FLASH_CMD_STATUS_RD 0x05 -- for all SpiFlash modules
	const SPI_FLASH_CMD_WRITE_ENABLE 0x06 -- for all SpiFlash modules
	const SPI_FLASH_CMD_SFDP_RD 0x5A -- for all SpiFlash modules
	const SPI_FLASH_CMD_DEVICE_ID_RD 0x9F -- for all SpiFlash modules
	const SPI_FLASH_CMD_CHIP_ERASE 0xC7 -- for all SpiFlash modules
    const SPI_FLASH_CMD_SECTOR_ERASE 0xD8 -- for all SpiFlash modules
	   
	const CHIP_SELECT_SPI_FLASH_VAL 0x0 -- for all SpiFlash modules
	const CHIP_SELECT_NONE_VAL 0xF -- for all SpiFlash modules
	
	const SPI_FLASH_CLK_PERIOD_NS 20 -- for all SpiFlash modules

	bus SpiFlashBus 0


spiFlashDefaultTest:
proc
    log message $INFO_1 "INFINEON SPI FLASH TEST"
    
    log message $INFO_2 "Waiting for flash power up"
    
    wait 31000

    log message $INFO_2 "Activating SPI controller"
    equ ControlRegActivationMVal $ActivatedMVal
    call $setControlRegActivationMVal
    equ StatusRegOperationMValToWaitFor $IdleMVal
    call $waitForStatusRegOperationMVal

    log message $INFO_2 "Read SPI flash JEDEC ID"
    call $readFlashId
    
    -- log message $INFO_2 "Dump SPI flash SFDP data"
    -- call $readFlashSfdp 
    -- array pointer copy ArrayToDump ReadFlashSfdpArray
    -- call $arrayDump

    log message $INFO_2 "Erase SPI flash sector 0"
    call $eraseFlashSector
    call $waitForReadFlashStatusNotBusy
    
    -- log message $INFO_2 "Erase SPI flash chip"
    -- call $eraseFlashChip
    -- call $waitForReadFlashStatusNotBusy
    
    log message $INFO_2 "Write SPI flash page 0 with 0,1,2 ..."
    array pointer copy ArrayToFill WriteFlashPageArray
	equ ArrayFillVal 0
	equ ArrayFillValIncrement 1	
    call $arrayFill
    equ WriteFlashPagePageAddress 0
    call $writeFlashPage
    call $waitForReadFlashStatusNotBusy
    
    log message $INFO_2 "Dump SPI flash page 0"
    equ ReadFlashPagePageAddress 0
    call $readFlashPage 
    array pointer copy ArrayToDump ReadFlashPageArray
    call $arrayDump
    
    log message $INFO_2 "Deactivating SPI controller"
    equ ControlRegActivationMVal $DeActivatedMVal
    call $setControlRegActivationMVal
    equ StatusRegOperationMValToWaitFor $OffMVal
    call $waitForStatusRegOperationMVal
    
end proc

