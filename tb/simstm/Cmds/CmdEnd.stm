-- ******************************************************************************
-- 
--                   /------o
--             eccelerators
--          o------/
-- 
--  This file is an Eccelerators GmbH sample project.
-- 
--  MIT License:
--  Copyright (c) 2023 Eccelerators GmbH
-- 
--  Permission is hereby granted, free of charge, to any person obtaining a copy
--  of this software and associated documentation files (the "Software"), to deal
--  in the Software without restriction, including without limitation the rights
--  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--  copies of the Software, and to permit persons to whom the Software is
--  furnished to do so, subject to the following conditions:
-- 
--  The above copyright notice and this permission notice shall be included in all
--  copies or substantial portions of the Software.
-- 
--  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
--  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
--  SOFTWARE.
-- ******************************************************************************

    -- global
		-- var CmdAddress from Cmd.stm
		-- var CmdBus from Cmd.stm
    -- parameter
    var CmdEndAutoRestartMVal 0
    var CmdEndAddressToGotoVal 0
    -- intern
    var CmdEndTmp0 0

setCmdEndAutoRestartMVal:
proc
	equ CmdEndTmp0 $CmdEndAutoRestartMVal
    equ ReadModifyWriteAdr32 $CmdAddress
    equ ReadModifyWriteMask32 $CmdEndCell_AutoRestartMask
    or ReadModifyWriteMask32 $CmdEndCell_CmdEndCellIdMask
    equ ReadModifyWriteData32 $CmdEndTmp0	
    or ReadModifyWriteData32 $CmdEndCell_EndCellIdMVal
	call $readModifyWrite32
end proc

getCmdEndAutoRestartMVal:
proc
	bus read CmdBus 32 $CmdAddress CmdEndTmp0
	and CmdEndTmp0 $CmdEndCell_AutoRestartMask
	equ CmdEndAutoRestartMVal $CmdEndTmp0
end proc

setCmdEndAddressToGotoVal:
proc
	equ CmdEndTmp0 $CmdEndAddressToGotoVal
	shl CmdEndTmp0 $CmdEndCell_AddressToGotoPosition
    equ ReadModifyWriteAdr32 $CmdAddress
    equ ReadModifyWriteMask32 $CmdEndCell_AddressToGotoMask
    or ReadModifyWriteMask32 $CmdEndCell_CmdEndCellIdMask
    equ ReadModifyWriteData32 $CmdEndTmp0	
    or ReadModifyWriteData32 $CmdEndCell_EndCellIdMVal
	call $readModifyWrite32
end proc

getCmdEndAddressToGotoVal:
proc
	bus read CmdBus 32 $CmdAddress CmdEndTmp0
	and CmdEndTmp0 $CmdEndCell_AddressToGotoMask
	shr CmdEndTmp0 $CmdEndCell_AddressToGotoPosition
	equ CmdEndAddressToGotoVal $CmdEndTmp0
end proc

